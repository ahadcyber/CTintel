version: '3.8'

services:
  # CTI Dashboard Application
  app:
    build: .
    container_name: cti-dashboard
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - MONGO_URI=${MONGO_URI}
      - OTX_API_KEY=${OTX_API_KEY}
      - ABUSEIPDB_KEY=${ABUSEIPDB_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - LOG_LEVEL=INFO
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    depends_on:
      - mongodb
    networks:
      - cti-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB (optional - comment out if using Atlas)
  mongodb:
    image: mongo:7.0
    container_name: cti-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=cti_dashboard
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    restart: unless-stopped
    networks:
      - cti-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: cti-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - cti-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  cti-network:
    driver: bridge
